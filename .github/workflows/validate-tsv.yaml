# Name of the workflow, visible in the GitHub Actions UI
name: Validate TSV File

# Define the events that trigger the workflow
on:
  # Trigger the workflow when there are changes to .tsv files on push
  push:
    paths:
      - "**.tsv" # Trigger workflow if any .tsv file is changed in the repository

  # Trigger the workflow on pull request if there are changes to .tsv files
  pull_request:
    paths:
      - "**.tsv" # Trigger workflow if any .tsv file is changed in a pull request

  # Allow manual triggering of the workflow through the GitHub UI
  workflow_dispatch: # Allows users to manually trigger this workflow

# Define the jobs section where the steps to run are listed
jobs:
  validate:
    runs-on: ubuntu-latest # Specifies the operating system for the runner (latest Ubuntu version)

    steps:
      # Step 1: Checkout the repository's code to the GitHub Actions runner
      - name: Checkout repository # Step description in GitHub Actions UI
        uses: actions/checkout@v2 # Action used to check out the code from the repository

      # Step 2: Install csvkit, a tool to validate .tsv files, via apt-get
      - name: Install csvkit # Step description in GitHub Actions UI
        run: sudo apt-get update && sudo apt-get install -y csvkit

      # Step 3: Run csvclean with verbose output to check for errors in .tsv files
      - name: Run csvclean to print errors # Step description in GitHub Actions UI
        run: | # Start a multiline shell script to run
          # Loop through all .tsv files in the repository
          for file in $(find . -name "*.tsv"); do  
            echo "File: $file"  # Print the name of the file being validated
            csvclean -t -e utf-8 "$file"
            csvstat "$file" # Print the statistics of the .tsv file
          done
